DESIGN DB MODEL FOR GUVI ZEN CLASS

-- create database zen_class;

 use zen_class;

to create table users-primary key-master data
create table users(
user_id integer auto_increment primary key,
user_name varchar (255),
email varchar (255),
createdAt datetime,
batch integer
);

--to display table users

select * from users;

to insert singe row:

INSERT INTO users (user_name, email, createdAt, batch)
VALUES ('karthik','karthi@gmail.com',CURRENT_TIMESTAMP(),50);

To insert multiple rows:
INSERT INTO users (user_name, email, createdAt, batch)
VALUES('gayu','gayu@gmail.com',CURRENT_TIMESTAMP(),51),
('maha','maha@gmail.com',CURRENT_TIMESTAMP(),52),
('mugilan','mugil@gmail.com',CURRENT_TIMESTAMP(),53),
('iniya','iniya@gmail.com',CURRENT_TIMESTAMP(),54);

To create table â€“ codeketa:

 -- codeketa     

 create table codeketa(
 code_id integer auto_increment primary key,
 user_id integer,
 number_of_problem integer,
 status_problem varchar(255),
 FOREIGN KEY (user_id) REFERENCES users(user_id)
);

---------------------------------------------------------------------------------------------------------------
-- Primary keys must contain UNIQUE values, and cannot contain NULL values.
-- The table with the foreign key is called the child table, and
-- the table with the primary key is called the referenced or parent table.
---------------------------------------------------------------------------------------------------------------


drop table codeketa;

INSERT INTO codeketa( user_id,number_of_problem,status_problem) VALUES
    (1,20, 'pending'),
    (1,30, 'finished'),
    (2,40, 'finished'),
    (2,50, 'finished'),
    (5,60,'finished');

select * from codeketa;

to delete multiple row:

delete from codeketa where code_id in(2,3,4,5);

to delete:

DELETE FROM codeketa;

--company drives:

CREATE TABLE company_drives (
    drive_id INTEGER AUTO_INCREMENT PRIMARY KEY,
    user_id INTEGER,
    drive_date DATE,
    company VARCHAR(100),
    FOREIGN KEY (user_id) REFERENCES users(user_id)
);

INSERT INTO company_drives(user_id, drive_date, company) VALUES
    ( 1,MAKEDATE(2024, 3), "Apple"),
     (1, MAKEDATE(2024, 5), "Amazon"),
    (2, MAKEDATE(2024, 3), "Zomato"),
     (4, MAKEDATE(2023, 12), "Flipkart"),
    (5,MAKEDATE(2023,5), "TCS");

select * from company_drives;

drop table company_drives;


The INNER JOIN keyword selects records that have matching values in both tables.


-- master data 2


Table - batch_data:
CREATE TABLE batch_data(
batch_id int auto_increment primary key,
batch_name varchar(100)
);

insert into batch_data(batch_name)values
('full stack-2023'),
('full stack-2023'),
('html-2023'),
('css-2023'),
('mongodb-2023');

select * from batch_data;

To refer foreign key
alter table batch_data
add foreign key (batch_id)references users(batch);

-- inner join table-common value

SELECT users.batch,batch_data.batch_id
FROM users
INNER JOIN batch_data on users.batch = batch_data.batch_id;

-- mentor:

CREATE TABLE mentors (
    mentorid INTEGER AUTO_INCREMENT PRIMARY KEY,
    mentorname VARCHAR(100),
    mentoremail VARCHAR(100)
);
INSERT INTO mentors(mentorname, mentoremail) VALUES
    ("Surya", "suryakumar@gmail.com"),
    ("Viji" , "vijay@gmail.com"),
    ("arun","arun@gmail.com"),
    ("prabhu" ,"prabhu@gmail.com");
INSERT INTO mentors(mentorname, mentoremail) VALUES
("naga","naga@gmail.com");



select * from mentors;

-- create table topics

CREATE TABLE topics (
    topicid INTEGER AUTO_INCREMENT PRIMARY KEY,
    topic VARCHAR(200),
    topic_date DATE,
    mentor_id integer,
	FOREIGN KEY (mentor_id) REFERENCES mentors(mentorid)
);




INSERT INTO topics(topic, topic_date, mentor_id) VALUES
    ("HTML - Basics", "2023-04-01", 1),
    ("NodeJS - Basics", "2023-06-03", 2),
    ("JavaScript - Basics", "2023-07-05", 3),
    ("React - Basics", "2023-08-06", 4),
    ("mysql -Basic","2023-09-5",5);
   

select * from topics;


-- tasks:
CREATE TABLE tasks (
    taskid INTEGER AUTO_INCREMENT PRIMARY KEY,
    topic_id integer,
    task VARCHAR(1000),
    batch_id INTEGER,
    FOREIGN KEY (topic_id) REFERENCES topics(topicid)
);
INSERT INTO tasks(topic_id, task, batch_id)VALUES
    (1, "HTML Task", 1),
    (2, "Javascript Task", 2),
    (3, "React Task",3),
    (4, "NodeJs Task",4),
    (5, "Mysql task",5);
    
select * from tasks;

-- attendance table

CREATE TABLE attendance (
    attendanceid INTEGER AUTO_INCREMENT PRIMARY KEY,
   user_id integer,
    topicsid INTEGER,
    attended BOOLEAN,
    FOREIGN KEY ( user_id) REFERENCES users( user_id),
    FOREIGN KEY (topicsid) REFERENCES topics(topicid)
);

INSERT INTO attendance( user_id, topicsid, attended) VALUES
    (6, 3, true),
    (6, 1, true),
    (7, 2, false),
    (7, 4, true),
    (8, 4, true);

select * from attendance;


EER DIAGRAM:

in word document file: EER DIAGRAM -MYSQL.docx -cick to view EER DIAGRAM
